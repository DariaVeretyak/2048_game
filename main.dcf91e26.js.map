{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","tbody","tRows","rows","controls","maxCellValue","field","createNewField","i","length","j","id","value","arrValues","n","push","insertAdjacentHTML","restart","start","gameScore","messageStart","messageLose","messageWin","letFillCells","cells","innerText","addClassCell","newClass","classList","remove","add","resetInfo","textContent","emptyCellsArr","getEmptyCellsArr","numberMoves","getScoreValue","scoreValue","randomCell","getRandomCell","randomValue","Math","floor","random","getRandomValue","mathNumber","addNewValue","addEventListener","moveRight","checkRight","prevValue","moveLeft","checkLeft","moveDown","checkDown","moveUp","checkUp","evKey","contains","code"],"mappings":"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","file":"main.dcf91e26.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst tbody = document.querySelector('tbody');\nconst tRows = tbody.rows;\nconst controls = document.querySelector('.controls');\nconst maxCellValue = 2048;\n\nconst field = [];\n\n// cоздаем пустой массив field\nconst createNewField = () => {\n  for (let i = 0; i < tRows.length; i++) {\n    field[i] = [];\n\n    for (let j = 0; j < tRows.length; j++) {\n      const id = (i + 1) * 10 + j + 1;\n\n      field[i][j] = {\n        id: id, value: 0,\n      };\n    }\n  }\n};\n\nconst arrValues = [];\n\nfor (let n = 1; 2 ** n <= maxCellValue; n++) {\n  arrValues.push(2 ** n);\n};\n\ncontrols.insertAdjacentHTML('beforeend', `\n  <button class=\"button restart hidden\">Restart</button>\n`);\n\nconst restart = controls.querySelector('.restart');\nconst start = controls.querySelector('.start');\n\nconst gameScore = document.querySelector('.game-score');\n\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\n// переносим все данные с массива field\nconst letFillCells = function() {\n  for (let i = 0; i <= 3; i++) {\n    for (let j = 0; j <= 3; j++) {\n      if (field[i][j].value !== 0) {\n        tRows[i].cells[j].innerText = field[i][j].value;\n      } else {\n        tRows[i].cells[j].innerText = '';\n      }\n    }\n  }\n  addClassCell();\n};\n\n// добавляем классы ячейкам\nconst addClassCell = function() {\n  for (let i = 0; i <= 3; i++) {\n    for (let j = 0; j <= 3; j++) {\n      for (const newClass of arrValues) {\n        tRows[i].cells[j].classList.remove(`field-cell--${newClass}`);\n      }\n\n      if (field[i][j] !== 0) {\n        tRows[i].cells[j].classList.add(`field-cell--${field[i][j].value}`);\n      }\n    }\n  }\n};\n\n// очищаем страницу\nconst resetInfo = function() {\n  gameScore.textContent = 0;\n  restart.classList.add('hidden');\n  start.classList.remove('hidden');\n  messageStart.classList.remove('hidden');\n};\n\n// coздаем массив пустых ячеек\nlet emptyCellsArr = [];\nconst getEmptyCellsArr = function() {\n  emptyCellsArr = [];\n\n  for (let i = 0; i < tRows.length; i++) {\n    for (let j = 0; j < tRows.length; j++) {\n      if (field[i][j].value === 0) {\n        emptyCellsArr.push(field[i][j].id);\n      }\n    }\n  }\n\n  if (emptyCellsArr.length === 0) {\n    let numberMoves = 0;\n\n    for (let i = 3; i > 0; i--) {\n      for (let j = 3; j > 0; j--) {\n        if (\n          field[i][j].value === field[i - 1][j].value\n          || field[i][j].value === field[i][j - 1].value\n          || field[0][j].value === field[0][j - 1].value\n          || field[i][0].value === field[i - 1][0].value\n        ) {\n          numberMoves++;\n        }\n      }\n    }\n\n    if (numberMoves === 0) {\n      messageLose.classList.remove('hidden');\n    }\n  }\n\n  return emptyCellsArr;\n};\n\n// считаем score\nconst getScoreValue = function() {\n  let scoreValue = 0;\n\n  for (let i = 0; i < tRows.length; i++) {\n    for (let j = 0; j < tRows.length; j++) {\n      scoreValue += field[i][j].value;\n    }\n  }\n  gameScore.textContent = scoreValue;\n\n  return scoreValue;\n};\n\n// выбираем пустую ячейку для заполнения\nlet randomCell = 0;\nconst getRandomCell = function() {\n  const randomValue = Math.floor(Math.random() * emptyCellsArr.length);\n\n  randomCell = emptyCellsArr[randomValue];\n\n  return randomCell;\n};\n\n// выбираем случайное значение для заполнения\nconst getRandomValue = function() {\n  const mathNumber = Math.random();\n\n  return mathNumber < 0.1\n    ? 4 : 2;\n};\n\n// добавляем новое значение в ячейку\nconst addNewValue = () => {\n  getEmptyCellsArr();\n  getRandomCell();\n\n  for (let i = 0; i < tRows.length; i++) {\n    for (let j = 0; j < tRows.length; j++) {\n      if (field[i][j].id === randomCell) {\n        field[i][j].value = getRandomValue();\n      }\n    }\n  }\n  letFillCells();\n  addClassCell();\n};\n\n// нажатие start\nstart.addEventListener('click', () => {\n  createNewField();\n  start.classList.add('hidden');\n  restart.classList.remove('hidden');\n  messageStart.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  addNewValue();\n  addNewValue();\n  getScoreValue();\n});\n\n// нажатие restart\nrestart.addEventListener('click', () => {\n  createNewField();\n  messageLose.classList.add('hidden');\n  resetInfo();\n  letFillCells();\n});\n\nconst moveRight = function() {\n  let checkRight = 0;\n\n  do {\n    for (let i = 0; i <= 3; i++) {\n      for (let j = 2; j >= 0; j--) {\n        // проверяем на наличие значения\n        if (field[i][j].value !== 0) {\n          const prevValue = field[i][j].value;\n\n          // если следующий пустой - сдвигаем, переносим значение\n          if (field[i][j + 1].value === 0) {\n            field[i][j].value = 0;\n            field[i][j + 1].value = prevValue;\n          }\n        }\n      }\n    }\n    checkRight++;\n  } while (checkRight < 3);\n};\n\nconst moveLeft = function() {\n  let checkLeft = 0;\n\n  do {\n    for (let i = 0; i <= 3; i++) {\n      for (let j = 1; j <= 3; j++) {\n        // проверяем на наличие значения\n        if (field[i][j].value !== 0) {\n          // если следующий пустой - сдвигаем, переносим значение\n          if (field[i][j - 1].value === 0) {\n            const prevValue = field[i][j].value;\n\n            field[i][j].value = 0;\n            field[i][j - 1].value = prevValue;\n          }\n        }\n      }\n    }\n    checkLeft++;\n  } while (checkLeft < 3);\n};\n\nconst moveDown = function() {\n  let checkDown = 0;\n\n  do {\n    for (let i = 2; i >= 0; i--) {\n      for (let j = 0; j <= 3; j++) {\n        // проверяем на наличие значения\n        if (field[i][j].value !== 0) {\n          // если следующий пустой - сдвигаем, переносим значение\n          const prevValue = field[i][j].value;\n\n          if (field[i + 1][j].value === 0) {\n            field[i][j].value = 0;\n            field[i + 1][j].value = prevValue;\n          }\n        }\n      }\n    }\n    checkDown++;\n  } while (checkDown < 3);\n};\n\nconst moveUp = function() {\n  let checkUp = 0;\n\n  do {\n    for (let i = 1; i <= 3; i++) {\n      for (let j = 0; j <= 3; j++) {\n        // проверяем на наличие значения\n        if (field[i][j].value !== 0) {\n          // если следующий пустой - сдвигаем, переносим значение\n          if (field[i - 1][j].value === 0) {\n            const prevValue = field[i][j].value;\n\n            field[i][j].value = 0;\n            field[i - 1][j].value = prevValue;\n          }\n        }\n      }\n    }\n    checkUp++;\n  } while (checkUp < 3);\n};\n\n// нажатие клавиш\nbody.addEventListener('keydown', (evKey) => {\n  if (!messageLose.classList.contains('hidden')) {\n    return;\n  };\n\n  if (\n    evKey.code !== 'ArrowRight'\n    && evKey.code !== 'ArrowLeft'\n    && evKey.code !== 'ArrowDown'\n    && evKey.code !== 'ArrowUp'\n  ) {\n    return;\n  }\n\n  switch (evKey.code) {\n    case 'ArrowRight':\n      moveRight();\n\n      // плюсуем\n      for (let i = 0; i <= 3; i++) {\n        for (let j = 3; j > 0; j--) {\n          if (field[i][j].value === field[i][j - 1].value) {\n            field[i][j].value *= 2;\n            field[i][j - 1].value = 0;\n          }\n        }\n      };\n      moveRight();\n      break;\n\n    case 'ArrowLeft':\n      moveLeft();\n\n      // плюсуем\n      for (let i = 0; i <= 3; i++) {\n        for (let j = 0; j < 3; j++) {\n          if (field[i][j].value === field[i][j + 1].value) {\n            field[i][j].value *= 2;\n            field[i][j + 1].value = 0;\n          }\n        }\n      };\n      moveLeft();\n      break;\n\n    case 'ArrowDown':\n      moveDown();\n\n      // плюсуем\n      for (let i = 3; i > 0; i--) {\n        for (let j = 0; j <= 3; j++) {\n          if (field[i][j].value === field[i - 1][j].value) {\n            field[i][j].value *= 2;\n            field[i - 1][j].value = 0;\n          }\n        }\n      };\n      moveDown();\n      break;\n\n    case 'ArrowUp':\n      moveUp();\n\n      // плюсуем\n      for (let i = 0; i < 3; i++) {\n        for (let j = 0; j <= 3; j++) {\n          if (field[i][j].value === field[i + 1][j].value) {\n            field[i][j].value *= 2;\n            field[i + 1][j].value = 0;\n          }\n        }\n      };\n      moveUp();\n      break;\n  }\n\n  // проверка на выиграш\n  for (let i = 0; i <= 3; i++) {\n    for (let j = 0; j <= 3; j++) {\n      if (field[i][j].value === maxCellValue) {\n        messageWin.classList.remove('hidden');\n        resetInfo();\n      }\n    }\n  };\n\n  letFillCells();\n\n  if (emptyCellsArr.length > 0) {\n    addNewValue();\n  };\n  getScoreValue();\n  getEmptyCellsArr();\n});\n"]}